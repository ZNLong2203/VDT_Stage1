services:
  flink-jobmanager:
    image: flink:1.17
    container_name: flink-jobmanager
    command: jobmanager
    ports:
      - "8081:8081"
    environment:
      - JOB_MANAGER_RPC_ADDRESS=flink-jobmanager
    networks:
      - starrocks-net

  flink-taskmanager:
    image: flink:1.17
    container_name: flink-taskmanager
    command: taskmanager
    depends_on:
      - flink-jobmanager
    environment:
      - JOB_MANAGER_RPC_ADDRESS=flink-jobmanager
    networks:
      - starrocks-net

  flink-validator:
    build:
      context: .
      dockerfile: flink-job/Dockerfile
    container_name: flink-validator
    volumes:
      - ./flink-job:/opt/pyflink-job
    command: python3 /opt/pyflink-job/main.py
    depends_on:
      postgres:
        condition: service_healthy
      starrocks-quickstart:
        condition: service_healthy
    networks:
      - starrocks-net

  starrocks-quickstart:
    image: starrocks/allin1-ubuntu:latest
    container_name: starrocks-quickstart
    environment:
      - STARROCKS_HEAP_SIZE=4G
      - FE_SERVICE_PORT=8030
      - FRONTEND_MYSQL_PORT=9030
    ports:
      - "8030:8030"
      - "9030:9030"
      - "8040:8040"
    volumes:
      - starrocks-data-fe:/opt/starrocks/fe/storage
      - starrocks-data-be:/opt/starrocks/be/storage
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "127.0.0.1", "-P", "9030", "-u", "root"]
      interval: 5s
      timeout: 5s
      retries: 20
    networks:
      - starrocks-net

  postgres:
    image: postgres:latest
    container_name: postgres
    environment:
      POSTGRES_USER: retail_user
      POSTGRES_PASSWORD: retail_pass
      POSTGRES_DB: retail_db
    volumes:
      - ./init/init.sql:/docker-entrypoint-initdb.d/init.sql
      - ./postgres/postgresql.conf:/etc/postgresql/postgresql.conf
    command: [ "postgres", "-c", "config_file=/etc/postgresql/postgresql.conf" ]
    ports:
      - "5432:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U retail_user" ]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - starrocks-net

  metabase:
    image: metabase/metabase:latest
    container_name: metabase
    ports:
      - "3000:3000"
    environment:
      MB_DB_FILE: /metabase-data/metabase.db
    volumes:
      - metabase-data:/metabase-data
    depends_on:
      - starrocks-quickstart
    networks:
      - starrocks-net

volumes:
  starrocks-data-fe:
  starrocks-data-be:
  metabase-data:
  postgres-data:

networks:
  starrocks-net:
    driver: bridge
