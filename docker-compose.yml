version: '3.8'

services:
  # PostgreSQL with CDC enabled
  postgres:
    image: postgres:15
    container_name: postgres-cdc
    environment:
      POSTGRES_DB: ecommerce
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8"
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./sql/postgres-init:/docker-entrypoint-initdb.d
      - ./config/postgresql.conf:/etc/postgresql/postgresql.conf
      - ./dataset:/dataset:ro
    command: postgres -c config_file=/etc/postgresql/postgresql.conf
    networks:
      - pipeline-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # StarRocks All-in-One
  starrocks:
    image: starrocks/allin1-ubuntu
    container_name: starrocks-allin1
    hostname: starrocks
    ports:
      - "8030:8030"  # FE HTTP port
      - "9030:9030"  # FE MySQL port
      - "8040:8040"  # BE HTTP port
      - "9060:9060"  # BE Heartbeat port
    environment:
      - HOST_TYPE=FQDN
    volumes:
      - starrocks_data:/opt/starrocks
    networks:
      - pipeline-network
    healthcheck:
      test: ["CMD-SHELL", "mysql -h 127.0.0.1 -P 9030 -u root --protocol=TCP -e 'SELECT 1;' || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5

  # Metabase for BI
  metabase:
    image: metabase/metabase:latest
    container_name: metabase
    ports:
      - "3000:3000"
    environment:
      MB_DB_TYPE: h2
      MB_DB_FILE: /metabase-data/metabase.db
    volumes:
      - metabase_data:/metabase-data
    networks:
      - pipeline-network
    depends_on:
      - starrocks

volumes:
  postgres_data:
  starrocks_data:
  metabase_data:

networks:
  pipeline-network:
    driver: bridge 